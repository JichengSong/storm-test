<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
<!--
/**
 * Copyright 2010 The Apache Software Foundation
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
-->
<configuration>
<property>
    <name>hbase.rootdir</name>
    <value>hdfs://YZSJHL18-25.opi.com/hbase</value>
  </property>
  <property>
    <name>hbase.cluster.distributed</name>
    <value>true</value>
  </property>
  <property>
    <name>hbase.zookeeper.property.clientPort</name>
    <value>2222</value>
  </property>
  <property>
    <name>hbase.zookeeper.quorum</name>
    <value>10.4.18.25,10.4.18.22,10.4.18.23,10.4.18.24,10.4.18.32,10.4.18.33,10.4.18.34</value>
  </property>
  <property>
    <name>hbase.zookeeper.property.dataDir</name>
    <value>/data/hbase/zookeeper.data.dir</value>
  </property>
  <property>
    <name>hbase.regionserver.handler.count</name>
    <value>100</value>
  </property>
  <property>
    <name>hbase.regionserver.msginterval</name>
    <value>500</value>
  </property>
  <property>
    <name>dfs.datanode.socket.write.timeout</name>
    <value>480000</value>
  </property>
  <property>
    <name>dfs.socket.timeout</name>
    <value>180000</value>
  </property>

  <property>
    <name>hbase.regionserver.lease.period</name>
    <value>180000</value>
    <description>HRegion server lease period in milliseconds. Default is
    60 seconds. Clients must report in within this period else they are
    considered dead.</description>
  </property>
  <property>
    <name>hbase.rpc.timeout</name>
    <value>180000</value>
  </property>

  <property>
    <name>zookeeper.session.timeout</name>
    <value>1200000</value>
    <description>ZooKeeper session timeout.
      HBase passes this to the zk quorum as suggested maximum time for a
      session (This setting becomes zookeeper's 'maxSessionTimeout').  See
      http://hadoop.apache.org/zookeeper/docs/current/zookeeperProgrammers.html#ch_zkSessions
      "The client sends a requested timeout, the server responds with the
      timeout that it can give the client. " In milliseconds.
    </description>
  </property>
  <property>
    <name>hbase.zookeeper.property.tickTime</name>
    <value>6000</value>
  </property>

  <property>
    <name>hbase.hregion.memstore.flush.size</name>
    <value>134217728</value>
  </property>

  <property>
    <name>hbase.hregion.max.filesize</name>
    <value>10737418240</value>
  </property>

   <property>
    <name>hbase.regionserver.global.memstore.upperLimit</name>
    <value>0.40</value>
  </property>
   <property>
    <name>hbase.regionserver.global.memstore.lowerLimit</name>
    <value>0.35</value>
  </property>

  <property>
    <name>hbase.hregion.majorcompaction</name>
    <value>86400000</value>
    <description>The time (in miliseconds) between 'major' compactions of all
    HStoreFiles in a region.  Default: 1 day.
    Set to 0 to disable automated major compactions.
    </description>
  </property>

  <property>
    <name>hbase.hregion.memstore.mslab.enabled</name>
    <value>true</value>
    <description>
      Enables the MemStore-Local Allocation Buffer,
      a feature which works to prevent heap fragmentation under
      heavy write loads. This can reduce the frequency of stop-the-world
      GC pauses on large heaps.
    </description>
  </property>



  <property>
      <name>hfile.block.index.cacheonwrite</name>
      <value>false</value>
      <description>
          This allows to put non-root multi-level index blocks into the block
          cache at the time the index is being written.
      </description>
  </property>
  <property>
      <name>io.storefile.bloom.cacheonwrite</name>
      <value>false</value>
      <description>
          Enables cache-on-write for inline blocks of a compound Bloom filter.
      </description>
  </property>
  <property>
      <name>hbase.rs.cacheblocksonwrite</name>
      <value>false</value>
      <description>
          Whether an HFile block should be added to the block cache when the
          block is finished.
      </description>
  </property>


  <!-- read parameters -->
  <property>
    <name>hfile.block.cache.size</name>
    <value>0.20</value>
    <description>
        Percentage of maximum heap (-Xmx setting) to allocate to block cache
        used by HFile/StoreFile. Default of 0.25 means allocate 25%.
        Set to 0 to disable but it's not recommended.
    </description>
  </property>
  <property>
    <name>hbase.client.scanner.caching</name>
    <value>10000</value>
    <description>Number of rows that will be fetched when calling next
    on a scanner if it is not served from (local, client) memory. Higher
    caching values will enable faster scanners but will eat up more memory
    and some calls of next may take longer and longer times when the cache is empty.
    Do not set this value such that the time between invocations is greater
    than the scanner timeout; i.e. hbase.regionserver.lease.period
    </description>
  </property>

  <property>
     <name>hbase.hlog.split.skip.errors</name>
     <value>true</value>
  </property>

</configuration>
